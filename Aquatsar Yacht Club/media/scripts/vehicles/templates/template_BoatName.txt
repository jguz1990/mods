module Base
{
	model SailingYachtName_Sakharov
    {
        mesh = boats/SailingBoat|BodyName,
		texture = Boats/Name_SailingYacht_Sakharov,
        shader = vehiclewheel,
        invertX = FALSE,
        scale = 0.0011,
    }
	
	item SailingYachtName_Sakharov_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= Akademik Sakharov,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	model SailingYachtName_La_Brigandine
    {
        mesh = boats/SailingBoat|BodyName,
		texture = Boats/Name_SailingYacht_La_Brigandine,
        shader = vehiclewheel,
        invertX = FALSE,
        scale = 0.0011,
    }
	
	item SailingYachtName_La_Brigandine_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= La Brigandine,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	item SailingYachtName_Default_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= No name,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	model BoatMotorName_NP
    {
        mesh = boats/BoatMotor|BodyName,
		texture = Boats/Name_BoatMotor_NP,
        shader = vehiclewheel,
        invertX = FALSE,
        scale = 0.0015,
    }
	
	item BoatMotorName_NP_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= Nautilus P,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	model BoatMotorName_Orianna
    {
        mesh = boats/BoatMotor|BodyName,
		texture = Boats/Name_BoatMotor_Orianna,
        shader = vehiclewheel,
        invertX = FALSE,
        scale = 0.0015,
    }
	
	item BoatMotorName_Orianna_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= Orianna,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	item BoatMotorName_Default_Item
	{
		Weight	=	0.1,
        Type	=	Normal,
        DisplayName	= No name,
        Icon	=	CarKey,
		ConditionMax = 100,
        MechanicsItem = TRUE,
	}
	
	template vehicle SailingYachtName
	{
		part BoatName
		{
			model Sakharov
			{
				file = SailingYachtName_Sakharov,
			}
			model Sakharov_Trailer
			{
				file = SailingYachtName_Sakharov,
				scale = 4.54,
			}
			model La_Brigandine
			{
				file = SailingYachtName_La_Brigandine,
			}
			model La_Brigandine_Trailer
			{
				file = SailingYachtName_La_Brigandine,
				scale = 4.54,
			}
			specificItem = false,
			itemType = Base.SailingYachtName_Default_Item;Base.SailingYachtName_La_Brigandine_Item;Base.SailingYachtName_Sakharov_Item,
			category = BoatBody,
			table install
			{
				items
				{
					1
					{
						type = Base.Paintbrush,
						count = 1,
						keep = true,
						equip = primary,
					}
					2
					{
						type = Base.PaintWhite,
						count = 1,
						keep = true,
					}
					3
					{
						type = Base.PaintBlack,
						count = 1,
						keep = true,
					}
				}
				time = 500,
				professions = ,
				skills = ,
				traits = ,
				recipes = ,
				test = Vehicles.InstallTest.Default,
				complete = Boats.InstallComplete.SailingYachtName,
			}
			lua
			{
				create = Boats.Create.SailingYachtName,
				init = Boats.Init.SailingYachtName,
			}
		}
	}
	template vehicle BoatMotorName
	{
		part BoatName
		{
			model NP
			{
				file = BoatMotorName_NP,
			}
			model NP_Trailer
			{
				file = BoatMotorName_NP,
				scale = 4,
			}
			model Orianna
			{
				file = BoatMotorName_Orianna,
			}
			model Orianna_Trailer
			{
				file = BoatMotorName_Orianna,
				scale = 4,
			}
			specificItem = false,
			itemType = Base.BoatMotorName_Default_Item;Base.BoatMotorName_NP_Item;Base.BoatMotorName_Orianna_Item,
			category = BoatBody,
			table install
			{
				items
				{
					1
					{
						type = Base.Paintbrush,
						count = 1,
						keep = true,
						equip = primary,
					}
					2
					{
						type = Base.PaintWhite,
						count = 1,
						keep = true,
					}
					3
					{
						type = Base.PaintBlack,
						count = 1,
						keep = true,
					}
				}
				time = 500,
				professions = ,
				skills = ,
				traits = ,
				recipes = ,
				test = Vehicles.InstallTest.Default,
				complete = Boats.InstallComplete.MotorBoatName,
			}
			lua
			{
				create = Boats.Create.MotorBoatName,
				init = Boats.Init.MotorBoatName,
			}
		}
	}
}