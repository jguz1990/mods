--***********************************************************
--**                    ROBERT JOHNSON                     **
--***********************************************************

require "TimedActions/ISBaseTimedAction"

ISWearClothing = ISBaseTimedAction:derive("ISWearClothing");

function ISWearClothing:isValid()
	return self.character:getInventory():contains(self.item);
end

function ISWearClothing:update()
	self.item:setJobDelta(self:getJobDelta());
end

function ISWearClothing:start()
	self.item:setJobType(getText("ContextMenu_Wear") .. ' ' .. self.item:getName());
	self.item:setJobDelta(0.0);
end

function ISWearClothing:stop()
    ISBaseTimedAction.stop(self);
    self.item:setJobDelta(0.0);
end

function ISWearClothing:perform()
	local item = self.item
	local player = self.character
	local itemType = item:getType();   
	print("Test")
    if GlobalArmor[itemType] ~= nil and GlobalArmor[itemType]["Location"] ~= nil then
		print("Armor Yes")
		if(GlobalArmor[item:getType()]["Location"] == "Arms") then EquipOnArms(nil, player,0) 
		elseif(GlobalArmor[item:getType()]["Location"] == "Head") then EquipOnHead(nil, player,0) 
		elseif(GlobalArmor[item:getType()]["Location"] == "Legs") then EquipOnLegs(nil, player,0)
		elseif(GlobalArmor[item:getType()]["Location"] == "Body") then EquipOnChest(nil, player,0)
		elseif(GlobalArmor[item:getType()]["Location"] == "Vest") then EquipOnVest(nil, player,0)
		elseif(GlobalArmor[item:getType()]["Location"] == "Hands") then EquipOnHands(nil, player,0)
		elseif(GlobalArmor[item:getType()]["Location"] == "Feet") then EquipOnFeet(nil, player,0)
		elseif(GlobalArmor[item:getType()]["Location"] == "Shield") then EquipAsShield(nil, player,0)
		end
		if(GlobalArmor[item:getType()]["Location"] == "Arms") then EquipOnArms(item, player,1) 
		elseif(GlobalArmor[item:getType()]["Location"] == "Head") then EquipOnHead(item, player,1) 
		elseif(GlobalArmor[item:getType()]["Location"] == "Legs") then EquipOnLegs(item, player,1)
		elseif(GlobalArmor[item:getType()]["Location"] == "Body") then EquipOnChest(item, player,1)
		elseif(GlobalArmor[item:getType()]["Location"] == "Vest") then EquipOnVest(item, player,1)
		elseif(GlobalArmor[item:getType()]["Location"] == "Hands") then EquipOnHands(item, player,1)
		elseif(GlobalArmor[item:getType()]["Location"] == "Feet") then EquipOnFeet(item, player,1)
		elseif(GlobalArmor[item:getType()]["Location"] == "Shield") then EquipAsShield(item, player,1)
		end
	end	
	

    self.item:getContainer():setDrawDirty(true);
    self.item:setJobDelta(0.0);
	if instanceof(self.item, "InventoryContainer") and self.item:canBeEquipped() ~= "" then
		self.character:setWornItem(self.item:canBeEquipped(), self.item);
		getPlayerData(self.character:getPlayerNum()).playerInventory:refreshBackpacks();
	elseif self.item:getCategory() == "Clothing" then
		if self.item:getBodyLocation() ~= "" then
			self.character:setWornItem(self.item:getBodyLocation(), self.item);
		end
	end
	self.character:initSpritePartsEmpty();
	triggerEvent("OnClothingUpdated", self.character)
--~ 	self.character:SetClothing(self.item:getBodyLocation(), self.item:getSpriteName(), self.item:getPalette());
    -- needed to remove from queue / start next.
	ISBaseTimedAction.perform(self);
end

function ISWearClothing:new(character, item, time)
	local o = {}
	setmetatable(o, self)
	self.__index = self
	o.character = character;
	o.item = item;
	o.stopOnWalk = true;
	o.stopOnRun = true;
	o.maxTime = time;
	o.fromHotbar = true; -- just to disable hotbar:update() during the wearing
	if o.character:isTimedActionInstant() then o.maxTime = 1; end
	return o;
end
