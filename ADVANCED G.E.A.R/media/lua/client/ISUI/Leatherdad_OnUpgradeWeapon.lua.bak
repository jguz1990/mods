
-- ISInventoryPaneContextMenu.onUpgradeWeapon = function(weapon, part, player)
    -- ISInventoryPaneContextMenu.transferIfNeeded(player, weapon)
    -- ISInventoryPaneContextMenu.transferIfNeeded(player, part)
    -- if player:getInventory():contains("Screwdriver") then
        -- ISInventoryPaneContextMenu.equipWeapon(part, false, false, player:getPlayerNum());
        -- ISInventoryPaneContextMenu.equipWeapon(player:getInventory():getItemFromType("Screwdriver"), true, false, player:getPlayerNum());
        -- ISTimedActionQueue.add(ISUpgradeWeapon:new(player, weapon, part, 50));
    -- elseif player:getInventory():contains("Multitool") then
        -- ISInventoryPaneContextMenu.equipWeapon(part, false, false, player:getPlayerNum());
        -- ISInventoryPaneContextMenu.equipWeapon(player:getInventory():getItemFromType("Multitool"), true, false, player:getPlayerNum());
        -- ISTimedActionQueue.add(ISUpgradeWeapon:new(player, weapon, part, 50));
    -- end
-- end

-- ISInventoryPaneContextMenu.onRemoveUpgradeWeapon = function(weapon, part, playerObj)
    -- ISInventoryPaneContextMenu.transferIfNeeded(playerObj, weapon)
    -- if playerObj:getInventory():contains("Screwdriver") then
        -- ISInventoryPaneContextMenu.equipWeapon(playerObj:getInventory():getItemFromType("Screwdriver"), true, false, playerObj:getPlayerNum());
        -- ISTimedActionQueue.add(ISRemoveWeaponUpgrade:new(playerObj, weapon, part, 50));
    -- elseif playerObj:getInventory():contains("Multitool") then
        -- ISInventoryPaneContextMenu.equipWeapon(playerObj:getInventory():getItemFromType("Multitool"), true, false, playerObj:getPlayerNum());
        -- ISTimedActionQueue.add(ISRemoveWeaponUpgrade:new(playerObj, weapon, part, 50));
    -- end
-- end

local old_ISInventoryPaneContextMenu_onUpgradeWeapon = ISInventoryPaneContextMenu.onUpgradeWeapon

ISInventoryPaneContextMenu.onUpgradeWeapon = function(weapon, part, player)
	old_ISInventoryPaneContextMenu_onUpgradeWeapon(weapon, part, player)
    if player:getInventory():contains("Multitool") and not player:getInventory():contains("Screwdriver") then
        ISInventoryPaneContextMenu.equipWeapon(part, false, false, player:getPlayerNum());
        ISInventoryPaneContextMenu.equipWeapon(player:getInventory():getItemFromType("Multitool"), true, false, player:getPlayerNum());
        ISTimedActionQueue.add(ISUpgradeWeapon:new(player, weapon, part, 50));
    end
end

local old_ISInventoryPaneContextMenu_onRemoveUpgradeWeapon = ISInventoryPaneContextMenu.onRemoveUpgradeWeapon

ISInventoryPaneContextMenu.onRemoveUpgradeWeapon = function(weapon, part, playerObj)
	old_ISInventoryPaneContextMenu_onRemoveUpgradeWeapon(weapon, part, playerObj)
    if playerObj:getInventory():contains("Multitool") and not playerObj:getInventory():contains("Screwdriver") then
        ISInventoryPaneContextMenu.equipWeapon(playerObj:getInventory():getItemFromType("Multitool"), true, false, playerObj:getPlayerNum());
        ISTimedActionQueue.add(ISRemoveWeaponUpgrade:new(playerObj, weapon, part, 50));
    end
end